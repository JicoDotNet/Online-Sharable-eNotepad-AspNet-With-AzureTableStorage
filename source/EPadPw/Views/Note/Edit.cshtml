@using EPadPw.Models
@model Notepad
@{
    ViewBag.Title = "Edit your note";
    Layout = "~/Views/Shared/_LayoutNote.cshtml";
    bool FileUploadEligable = false;
}

@section HeadCss{
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
}
<section class="content-header">
    <div class="container">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Notepad : @Model.Subject</h1>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Note on "@Model.Subject"</h3>
                        <div class="card-tools">
                            <a  class="btn btn-tool" href="@Url.Action("Index", "Notes")">
                                <i class="fas fa-times"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="col-md-12">
                                <div data-note="header" class="callout callout-warning" style="border-left-width: 11px;">
                                    <span class="float-right d-none">
                                        <a href="@Url.Action("Requested", "Notepad", new { id = Model.RowKey })" class="card-link">
                                            <span class="text-primary">Requested for edit</span>
                                        </a>
                                    </span>
                                    <p class="mb-0">
                                        Click here to view your note!
                                        <a target="_blank" href="@Url.Action("Pad", "Note", new { id = Model.NoteUri })"
                                           class="card-link">@Model.NoteUri<i class="fas fa-external-link-alt pl-2"></i></a>
                                    </p>
                                    <p>
                                        Note Code: <b>@Model.NoteUri</b>
                                        <span style="cursor: pointer;" onclick="Copy('@Model.NoteUri')"> <i class="far fa-clone pl-2 text-success"></i></span>
                                        <span style="cursor: pointer;" data-toggle="modal" data-target="[data-modal='NoteUriEdit']"> <i class="fas fa-edit pl-2 text-info"></i></span>
                                    </p>
                                </div>
                            </div>
                            <div class="col-md-12 d-none" data-alert>
                                <div class="alert alert-danger">
                                    <h5><i class="icon fas fa-ban"></i> Alert!</h5>
                                    Maximum length of text: <b>10,00,000</b> Characters
                                    <br />You entired: <i data-alert="txtCount"></i> Characters.
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-9">
                                <textarea required name="Note" class="textarea form-control" style="height:100vh;font-family: 'Consolas';" spellcheck="false">@Model.Note</textarea>
                            </div>
                            <div class="col-md-3">
                                <div class="row">
                                    @if (Model != null && Model._Files != null)
                                    {
                                        if (Model._Files.Count < 22)
                                        {
                                            FileUploadEligable = true;
                                        }
                                    }
                                    else
                                    {
                                        FileUploadEligable = true;
                                    }
                                    @if (FileUploadEligable)
                                    {
                                        using (Html.BeginForm("File", "Note",
                                            FormMethod.Post, new { autocomplete = "off", enctype = "multipart/form-data" }))
                                        {
                                            <div class="col-12">
                                                <div class="form-group">
                                                    <label for="exampleInputFile">Attach file (max: 22 files)</label>
                                                    <input type="text" maxlength="32" name="FileDetails" required class="form-control"
                                                           placeholder="File Details (32 char)" />
                                                    <input type="file" required name="FilePath" class="form-control" />
                                                    <input type="hidden" name="PartitionKey" value="@Model.PartitionKey" />
                                                    <input type="hidden" name="RowKey" value="@Model.RowKey" />
                                                    <button type="submit" class="btn btn-success float-right">Upload</button>
                                                    <p class="help-block">Max each file 3.99MB</p>
                                                </div>
                                                <hr class="mb-3 mt-3" />
                                            </div>
                                        }
                                    }
                                    <div class="col-12">
                                        <dl>
                                            @if (Model != null && Model._Files != null)
                                            {
                                                foreach (NoteFile noteFile in Model._Files)
                                                {
                                                    <dt>
                                                        <a href="@noteFile.FilePath" target="_blank" class="card-link">@noteFile.FileName</a>
                                                        <a class="card-link text-danger float-right" title="Delete"
                                                           href="@Url.Action("DeleteFile", "Note", new { PartitionKey = Model.PartitionKey, RowKey = Model.RowKey, path = noteFile.FilePath })">
                                                            <i class="fas fa-trash-alt"></i>
                                                        </a>
                                                    </dt>
                                                    <dd>@noteFile.FileDetails</dd>
                                                }
                                            }
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Note Uri Edit Modal -->
<div class="modal fade" data-modal="NoteUriEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Note Code</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <small class="form-text text-muted">Only alphanumaric, '-' &amp; '_' allowed. <br />Minimum 8 char max 24 char allowed</small>
                <div class="input-group input-group-sm">
                    <input type="text" class="form-control" data-modal="NoteUri" placeholder="Enter Note Code" maxlength="24" value="@Model.NoteUri" />
                    <span class="input-group-append">
                        <button type="button" class="btn btn-info btn-flat" onclick="CheckAvailability()">Check Availability</button>
                    </span>
                </div>
                <small class="form-text text-danger" data-modal="NoteUriEditAlert"></small>
                <small class="form-text text-success" data-modal="NoteUriEditSuccess"></small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-sm" onclick="ChangeNoteCode()" >Change</button>
                <a href="javascript:void(0);" class="btn btn-danger btn-sm" data-dismiss="modal">Close</a>
            </div>
        </div>
    </div>
</div>

@section BodyScript{
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script type="text/javascript">
        function Copy(copyText) {
            navigator.clipboard.writeText(window.location.origin + "/" + copyText);
            toastr.success('Note URL has been copied successfully.');
        }
        //$(function () {
            // Summernote
            //$('.textarea').summernote({
            //    placeholder: 'Hello!! Add your note here.',
            //    height: 1000,
			//	fontNames: ['Consolas'],
            //    toolbar: [
            //        // [groupName, [list of button]]
            //        // ['style', ['bold', 'italic', 'underline', 'clear']],
            //        // ['font', ['strikethrough', 'superscript', 'subscript']],
			//		['fontname', ['fontname']],
            //        ['fontsize', ['fontsize']],
            //        // ['color', ['forecolor']],
            //        // ['para', ['height']],
			//		['height', ['height']],
            //        ['view', ['fullscreen', 'codeview']]
            //    ],
			//	lineHeights: ['0.5', '0.6', '0.8', '1.0'],
			//	//fontSizes: ['8', '9', '10', '11', '12'],
			//	fontSize: 12,
			//	lineHeight: '1.0',
			//	fontname: 'Consolas'
            //});
			//$('.textarea').summernote('fontName', 'Consolas');
			//$('.textarea').summernote('lineHeight', '0.6');
			//$('.textarea').summernote('focus');
        //});
        var Note = '';
        setInterval(function () { setData(); }, 3000);
        function setData() {
            if (Note != undefined && escape($('.textarea').val()) != '' && Note != escape($('.textarea').val())) {
                if ($('.textarea').val().length > 1000000) {
                    $('[data-alert]').removeClass('d-none');
                    $('[data-alert="txtCount"]').text($('.textarea').val().length);
                    return;
                }
                $('[data-alert]').addClass('d-none');
                Note = escape($('.textarea').val());

                var data ={
                    "Note": escape($('.textarea').val()),
                    "PartitionKey": "@Model.PartitionKey",
                    "RowKey": "@Model.RowKey"
                };
                $('[data-note="header"]').removeClass('callout-warning');
                $('[data-note="header"]').removeClass('callout-success');
                $('[data-note="header"]').addClass('callout-danger');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Edit", "Note")",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (data) {
                        $('[data-note="header"]').removeClass('callout-danger');
                        if (data) {
                            $('[data-note="header"]').addClass('callout-success');
                        }
                        else {
                            $('[data-note="header"]').addClass('callout-warning');
                        }
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });
            }
        }

        function CheckAvailability() {
            $('[data-modal="NoteUriEditSuccess"]').html('');
            $('[data-modal="NoteUriEditAlert"]').html('');
            if (!validateString($('[data-modal="NoteUri"]').val())){
                $('[data-modal="NoteUriEditAlert"]').html('<i class="fas fa-info pl-2"></i> Please enter a valid data.');
                return;
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("Availability", "Note", new { id = string.Empty })" + "/" + $('[data-modal="NoteUri"]').val(),
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    if (!data) {
                        $('[data-modal="NoteUriEditAlert"]').html('<i class="fas fa-info pl-2"></i> Note Code is Not available');
                    }
                    else {
                        $('[data-modal="NoteUriEditSuccess"]').html('<i class="fas fa-info pl-2"></i> Note Code is available');
                    }
                },
                failure: function (response) {
                    console.log(response.responseText);
                },
                error: function (response) {
                    console.log(response.responseText);
                }
            });
        }

        function validateString(input) {
            if (input.length < 8 || input.length > 24) {
                return false;
            }
            var validChar = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-".split('');
            for (const char of input) {
                if (!validChar.includes(char)) {
                    return false;
                }
            }
            return true;
        }

        function ChangeNoteCode() {
            var data = {
                "PartitionKey": "@Model.PartitionKey",
                "RowKey": "@Model.RowKey",
                "NoteUri": $('[data-modal="NoteUri"]').val()
            };
            $.ajax({
                type: "POST",
                url: "@Url.Action("UriChange", "Note")",
                data: JSON.stringify(data),
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    debugger;
                    if (!data) {
                        $('[data-modal="NoteUriEditAlert"]').html('<i class="fas fa-info pl-2"></i> Note Code is Not available');
                    }
                    else {
                        window.location.href = "/Note/Edit/" + $('[data-modal="NoteUri"]').val();
                    }
                },
                failure: function (response) {
                    console.log(response.responseText);
                },
                error: function (response) {
                    console.log(response.responseText);
                }
            });
        }
    </script>
}
